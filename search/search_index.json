{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Reproschema-py The reproschema-py library provides a Python interface and a command-line tool to work with ReproSchema, a YAML-based framework for creating and managing reproducible research protocols. This documentation will guide you through the installation process, explain how to use the command-line interface, and provide information for developers who want to contribute to the project. Getting Started If you are new to reproschema-py , we recommend starting with the Installation guide, followed by the User Guide to learn about the available commands.","title":"Home"},{"location":"#welcome-to-reproschema-py","text":"The reproschema-py library provides a Python interface and a command-line tool to work with ReproSchema, a YAML-based framework for creating and managing reproducible research protocols. This documentation will guide you through the installation process, explain how to use the command-line interface, and provide information for developers who want to contribute to the project.","title":"Welcome to Reproschema-py"},{"location":"#getting-started","text":"If you are new to reproschema-py , we recommend starting with the Installation guide, followed by the User Guide to learn about the available commands.","title":"Getting Started"},{"location":"about/","text":"About this documentation This section provides information about the structure of this documentation site. Project layout The documentation is organized as follows: mkdocs.yml # The MkDocs configuration file. docs/ index.md # The documentation homepage. installation.md # Installation instructions. about.md # Information about this documentation. user_guide/ index.md # Introduction to the user guide. cli_usage.md # General CLI usage. reproschema2redcap.md # reproschema to REDCap conversion. redcap2reproschema.md # REDCap to reproschema conversion. output2redcap.md # output to REDCap conversion. reproschema2fhir.md # reproschema to FHIR conversion.","title":"About"},{"location":"about/#about-this-documentation","text":"This section provides information about the structure of this documentation site.","title":"About this documentation"},{"location":"about/#project-layout","text":"The documentation is organized as follows: mkdocs.yml # The MkDocs configuration file. docs/ index.md # The documentation homepage. installation.md # Installation instructions. about.md # Information about this documentation. user_guide/ index.md # Introduction to the user guide. cli_usage.md # General CLI usage. reproschema2redcap.md # reproschema to REDCap conversion. redcap2reproschema.md # REDCap to reproschema conversion. output2redcap.md # output to REDCap conversion. reproschema2fhir.md # reproschema to FHIR conversion.","title":"Project layout"},{"location":"installation/","text":"Installation Use the following command to install reproschema: pip install reproschema Developer installation Fork this repo to your own GitHub account, then clone and install your forked repo in the developer mode: git clone https://github.com/<your github>/reproschema-py.git cd reproschema-py pip install -e . Style This repo uses pre-commit to check styling. - Install pre-commit with pip: pip install pre-commit - In order to use it with the repository, you have to run pre-commit install in the root directory the first time you use it. When pre-commit is used, you may have to run git commit twice, since pre-commit may make additional changes to your code for styling and will not commit these changes by default.","title":"Installation"},{"location":"installation/#installation","text":"Use the following command to install reproschema: pip install reproschema","title":"Installation"},{"location":"installation/#developer-installation","text":"Fork this repo to your own GitHub account, then clone and install your forked repo in the developer mode: git clone https://github.com/<your github>/reproschema-py.git cd reproschema-py pip install -e .","title":"Developer installation"},{"location":"installation/#style","text":"This repo uses pre-commit to check styling. - Install pre-commit with pip: pip install pre-commit - In order to use it with the repository, you have to run pre-commit install in the root directory the first time you use it. When pre-commit is used, you may have to run git commit twice, since pre-commit may make additional changes to your code for styling and will not commit these changes by default.","title":"Style"},{"location":"user_guide/","text":"User Guide This section provides a detailed guide to using the reproschema command-line interface (CLI).","title":"Introduction"},{"location":"user_guide/#user-guide","text":"This section provides a detailed guide to using the reproschema command-line interface (CLI).","title":"User Guide"},{"location":"user_guide/cli_usage/","text":"CLI usage This package installs reproschema Command Line Interface (CLI). $ reproschema --help $ A client to support interactions with ReproSchema To see help for a specific command, run reproschema COMMAND --help e.g. reproschema validate --help Options: --version -l, --log-level [DEBUG|INFO|WARNING|ERROR|CRITICAL] Log level name [default: INFO] --help Show this message and exit. Commands: convert Converts a path to a different format, jsonld,... create migrate Updates to a new reproschema version redcap2reproschema Converts REDCap CSV files to Reproschema format. reproschema2redcap Converts reproschema protocol to REDCap CSV format. serve validate Validates if the path has a valid reproschema format reproschema2fhir Generates FHIR questionnaire resources from reproschema activities output2redcap Generates redcap csv given the audio and survey data from reproschema ui","title":"CLI Usage"},{"location":"user_guide/cli_usage/#cli-usage","text":"This package installs reproschema Command Line Interface (CLI). $ reproschema --help $ A client to support interactions with ReproSchema To see help for a specific command, run reproschema COMMAND --help e.g. reproschema validate --help Options: --version -l, --log-level [DEBUG|INFO|WARNING|ERROR|CRITICAL] Log level name [default: INFO] --help Show this message and exit. Commands: convert Converts a path to a different format, jsonld,... create migrate Updates to a new reproschema version redcap2reproschema Converts REDCap CSV files to Reproschema format. reproschema2redcap Converts reproschema protocol to REDCap CSV format. serve validate Validates if the path has a valid reproschema format reproschema2fhir Generates FHIR questionnaire resources from reproschema activities output2redcap Generates redcap csv given the audio and survey data from reproschema ui","title":"CLI usage"},{"location":"user_guide/output2redcap/","text":"output2redcap The output2redcap function is designed to process the output from reproschema-ui into a REDCap CSV file as seen here . CLI Usage The output2redcap function has been integrated into a CLI tool, use the following command: reproschema output2redcap ./path/to/your_reproschema-ui_files ./path/to/directory_you_want_to_save_output","title":"Output to REDCap"},{"location":"user_guide/output2redcap/#output2redcap","text":"The output2redcap function is designed to process the output from reproschema-ui into a REDCap CSV file as seen here .","title":"output2redcap"},{"location":"user_guide/output2redcap/#cli-usage","text":"The output2redcap function has been integrated into a CLI tool, use the following command: reproschema output2redcap ./path/to/your_reproschema-ui_files ./path/to/directory_you_want_to_save_output","title":"CLI Usage"},{"location":"user_guide/redcap2reproschema/","text":"redcap2reproschema The redcap2reproschema function is designed to process a given REDCap CSV file and YAML configuration to generate the output in the reproschema format. Prerequisites Before the conversion, ensure you have the following: YAML Configuration File : - Download templates/redcap2rs.yaml and fill it out with your protocol details. YAML File Configuration In the templates/redcap2rs.yaml file, provide the following information: protocol_name : A unique identifier for your protocol. Use underscores for spaces and avoid special characters. protocol_display_name : Name that will appear in the application. protocol_description : A brief description of your protocol. redcap_version : Version of your redcap file (you can customize it). Example: protocol_name: \"My_Protocol\" protocol_display_name: \"Assessment Protocol\" protocol_description: \"This protocol is for assessing cognitive skills.\" redcap_version: \"X.XX.X\" CLI Usage The redcap2reproschema function has been integrated into a CLI tool, use the following command: reproschema redcap2reproschema path/to/your_redcap_data_dic.csv path/to/your_redcap2rs.yaml Optionally you can provide a path to the output directory (default is the current directory) by adding the option: --output-path PATH Python Function Usage You can also use the redcap2reproschema function from the reproschema-py package in your Python code. from reproschema import redcap2reproschema csv_path = \"path-to/your_redcap_data_dic.csv\" yaml_path = \"path-to/your_redcap2rs.yaml\" output_path = \"path-to/directory_you_want_to_save_output\" redcap2reproschema(csv_path, yaml_path, output_path)","title":"REDCap to Reproschema"},{"location":"user_guide/redcap2reproschema/#redcap2reproschema","text":"The redcap2reproschema function is designed to process a given REDCap CSV file and YAML configuration to generate the output in the reproschema format.","title":"redcap2reproschema"},{"location":"user_guide/redcap2reproschema/#prerequisites","text":"Before the conversion, ensure you have the following: YAML Configuration File : - Download templates/redcap2rs.yaml and fill it out with your protocol details.","title":"Prerequisites"},{"location":"user_guide/redcap2reproschema/#yaml-file-configuration","text":"In the templates/redcap2rs.yaml file, provide the following information: protocol_name : A unique identifier for your protocol. Use underscores for spaces and avoid special characters. protocol_display_name : Name that will appear in the application. protocol_description : A brief description of your protocol. redcap_version : Version of your redcap file (you can customize it). Example: protocol_name: \"My_Protocol\" protocol_display_name: \"Assessment Protocol\" protocol_description: \"This protocol is for assessing cognitive skills.\" redcap_version: \"X.XX.X\"","title":"YAML File Configuration"},{"location":"user_guide/redcap2reproschema/#cli-usage","text":"The redcap2reproschema function has been integrated into a CLI tool, use the following command: reproschema redcap2reproschema path/to/your_redcap_data_dic.csv path/to/your_redcap2rs.yaml Optionally you can provide a path to the output directory (default is the current directory) by adding the option: --output-path PATH","title":"CLI Usage"},{"location":"user_guide/redcap2reproschema/#python-function-usage","text":"You can also use the redcap2reproschema function from the reproschema-py package in your Python code. from reproschema import redcap2reproschema csv_path = \"path-to/your_redcap_data_dic.csv\" yaml_path = \"path-to/your_redcap2rs.yaml\" output_path = \"path-to/directory_you_want_to_save_output\" redcap2reproschema(csv_path, yaml_path, output_path)","title":"Python Function Usage"},{"location":"user_guide/reproschema2fhir/","text":"reproschema2fhir The reproschema2fhir function is designed to convert reproschema activities and items into a FHIR Questionnaire resource as seen here . CLI Usage The reproschema2fhir function has been integrated into a CLI tool, use the following command: reproschema reproschema2fhir ./path/to/your_reproschema_activities ./path/to/directory_you_want_to_save_output Notes The script requires an active internet connection to access the GitHub repository.","title":"Reproschema to FHIR"},{"location":"user_guide/reproschema2fhir/#reproschema2fhir","text":"The reproschema2fhir function is designed to convert reproschema activities and items into a FHIR Questionnaire resource as seen here .","title":"reproschema2fhir"},{"location":"user_guide/reproschema2fhir/#cli-usage","text":"The reproschema2fhir function has been integrated into a CLI tool, use the following command: reproschema reproschema2fhir ./path/to/your_reproschema_activities ./path/to/directory_you_want_to_save_output","title":"CLI Usage"},{"location":"user_guide/reproschema2fhir/#notes","text":"The script requires an active internet connection to access the GitHub repository.","title":"Notes"},{"location":"user_guide/reproschema2redcap/","text":"reproschema2redcap CLI Usage You can use this feature directly from the command line. To convert ReproSchema protocol to REDCap CSV format, use the following command reproschema reproschema2redcap <input_dir_path> <output_csv_filename> <input_dir_path> : The path to the root folder of a protocol. For example, to convert the reproschema-demo-protocol provided by ReproNim, you can use the following commands: bash git clone https://github.com/ReproNim/reproschema-demo-protocol.git cd reproschema-demo-protocol pwd In this case, the output from pwd (which shows your current directory path) should be your <input_dir_path> . <output_csv_filename> : The name of the output CSV file where the converted data will be saved. Python Function Usage You can also use the reproschema2redcap function from the reproschema-py package in your Python code. from reproschema import reproschema2redcap input_dir_path = \"path-to/reproschema-demo-protocol\" output_csv_filename = \"output.csv\" reproschema2redcap(input_dir_path, output_csv_filename)","title":"Reproschema to REDCap"},{"location":"user_guide/reproschema2redcap/#reproschema2redcap","text":"","title":"reproschema2redcap"},{"location":"user_guide/reproschema2redcap/#cli-usage","text":"You can use this feature directly from the command line. To convert ReproSchema protocol to REDCap CSV format, use the following command reproschema reproschema2redcap <input_dir_path> <output_csv_filename> <input_dir_path> : The path to the root folder of a protocol. For example, to convert the reproschema-demo-protocol provided by ReproNim, you can use the following commands: bash git clone https://github.com/ReproNim/reproschema-demo-protocol.git cd reproschema-demo-protocol pwd In this case, the output from pwd (which shows your current directory path) should be your <input_dir_path> . <output_csv_filename> : The name of the output CSV file where the converted data will be saved.","title":"CLI Usage"},{"location":"user_guide/reproschema2redcap/#python-function-usage","text":"You can also use the reproschema2redcap function from the reproschema-py package in your Python code. from reproschema import reproschema2redcap input_dir_path = \"path-to/reproschema-demo-protocol\" output_csv_filename = \"output.csv\" reproschema2redcap(input_dir_path, output_csv_filename)","title":"Python Function Usage"}]}